package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.verus

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.server.S37PacketStatistics

class VerusReachDisabler : DisablerMode("VerusReach") {

 var verustransactions = 0
 var newTransaction = 0

    override fun onEnable() {
        newTransaction = 0
        verustransactions = 0
    }

    override fun onUpdate(event: UpdateEvent) {
        if (mc.thePlayer.ticksExisted % 650 == 0) {
            PacketUtils.sendPacketNoEvent(C00PacketKeepAlive())
        }
        disabler.debugMessage("Send C00")
    }

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is C00PacketKeepAlive) {
            event.cancelEvent()
        }

        if (packet is C0FPacketConfirmTransaction) {
            verustransactions++
            if(verustransactions <= 1) {
                newTransaction = packet.getUid().toInt()
            }

            packet.uid = newTransaction.toShort()
        }

        if(packet is S37PacketStatistics) {
            verustransactions = 0
        }
    }
}